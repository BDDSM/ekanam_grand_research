#subtitle="Make Vs Avg. Mileage",
#caption="source: mpg",
x = ' ',
y = ' '
) +
theme(axis.text.x = element_text(angle=90, vjust=0.6))
# Draw plot
ggplot(df_i[1:20,], aes(x=reorder(users, loises),  y=loises)) +
geom_bar(stat="identity", width=.5, fill="tomato3",order = y) +
labs(title="Ordered Bar Chart",
#subtitle="Make Vs Avg. Mileage",
#caption="source: mpg",
x = ' ',
y = ' '
) +
theme(axis.text.x = element_text(angle=90, vjust=0.6))
# Draw plot
ggplot(df_i[1:20,], aes(x=reorder(users, loises),  y=loises)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
#subtitle="Make Vs Avg. Mileage",
#caption="source: mpg",
x = ' ',
y = ' '
) +
theme(axis.text.x = element_text(angle=90, vjust=0.6))
li = L[i,] # лайкаю я
df_i <- data.frame(t(rbind(uid_names[2,], li)))
names(df_i) <- c('users','loises')
df_i <- df_i[order(df_i$loises,decreasing = TRUE),]
# Draw plot
ggplot(df_i[1:20,], aes(x=reorder(users, loises),  y=loises)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
#subtitle="Make Vs Avg. Mileage",
#caption="source: mpg",
x = ' ',
y = ' '
) +
theme(axis.text.x = element_text(angle=90, vjust=0.6))
# Draw plot
ggplot(df_i[1:20,], aes(x=reorder(users, -loises),  y=loises)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
#subtitle="Make Vs Avg. Mileage",
#caption="source: mpg",
x = ' ',
y = ' '
) +
theme(axis.text.x = element_text(angle=90, vjust=0.6))
df_i$loises
li = L[i,] # лайкаю я
df_i <- data.frame(t(rbind(uid_names[2,], li)))
names(df_i) <- c('users','loises')
df_i$loises <- as.numeric(df_i$loises)
df_i <- df_i[order(df_i$loises,decreasing = TRUE),]
# Draw plot
ggplot(df_i[1:20,], aes(x=reorder(users, -loises),  y=loises)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
#subtitle="Make Vs Avg. Mileage",
#caption="source: mpg",
x = ' ',
y = ' '
) +
theme(axis.text.x = element_text(angle=90, vjust=0.6))
# Draw plot
ggplot(df_i[1:20,], aes(x=users,  y=loises)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
#subtitle="Make Vs Avg. Mileage",
#caption="source: mpg",
x = ' ',
y = ' '
) +
theme(axis.text.x = element_text(angle=90, vjust=0.6))
# Draw plot
ggplot(df_i[1:20,], aes(x=reorder(users, -loises),  y=loises)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
#subtitle="Make Vs Avg. Mileage",
#caption="source: mpg",
x = ' ',
y = ' '
) +
theme(axis.text.x = element_text(angle=90, vjust=0.6))
# Draw plot
ggplot(df_i[1:20,], aes(x=reorder(users, -loises),  y=loises)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
#subtitle="Make Vs Avg. Mileage",
#caption="source: mpg",
x = ' ',
y = ' '
) +
theme(axis.text.x = element_text(angle=90, vjust=0.6))
# Draw plot
ggplot(df_i[1:20,], aes(x=reorder(users, -loises),  y=loises)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
#subtitle="Make Vs Avg. Mileage",
#caption="source: mpg",
x = ' ',
y = ' '
) +
theme(axis.text.x = element_text(angle=90))
# Draw plot
ggplot(df_i[1:20,], aes(x=reorder(users, -loises),  y=loises)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
#subtitle="Make Vs Avg. Mileage",
#caption="source: mpg",
x = ' ',
y = ' '
) +
theme(axis.text.x = element_text(angle=90, vjust=6))
# Draw plot
ggplot(df_i[1:20,], aes(x=reorder(users, -loises),  y=loises)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
#subtitle="Make Vs Avg. Mileage",
#caption="source: mpg",
x = ' ',
y = ' '
) +
theme(axis.text.x = element_text(angle=90, vjust=0.6))
# Draw plot
ggplot(df_i[1:20,], aes(x=reorder(users, -loises),  y=loises)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
#subtitle="Make Vs Avg. Mileage",
#caption="source: mpg",
x = ' ',
y = ' '
) +
theme(axis.text.x = element_text(angle=90, vjust=0.1))
# Draw plot
ggplot(df_i[1:20,], aes(x=reorder(users, -loises),  y=loises)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
#subtitle="Make Vs Avg. Mileage",
#caption="source: mpg",
x = ' ',
y = ' '
) +
theme(axis.text.x = element_text(angle=90, vjust=0.5))
# Draw plot
ggplot(df_i[1:20,], aes(x=reorder(users, -loises),  y=loises)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
#subtitle="Make Vs Avg. Mileage",
#caption="source: mpg",
x = ' ',
y = ' '
) +
theme(axis.text.x = element_text(angle=90, vjust=0.3))
# Draw plot
ggplot(df_i[1:20,], aes(x=reorder(users, -loises),  y=loises)) +
geom_bar(stat="identity", width=.8, fill="tomato3") +
labs(title="Ordered Bar Chart",
#subtitle="Make Vs Avg. Mileage",
#caption="source: mpg",
x = ' ',
y = ' '
) +
theme(axis.text.x = element_text(angle=90, vjust=0.3))
options(repr.plot.width=4, repr.plot.height=3)
# Draw plot
ggplot(df_i[1:20,], aes(x=reorder(users, -loises),  y=loises)) +
geom_bar(stat="identity", width=.8, fill="tomato3") +
labs(title="Ordered Bar Chart",
#subtitle="Make Vs Avg. Mileage",
#caption="source: mpg",
x = ' ',
y = ' '
) +
theme(axis.text.x = element_text(angle=90, vjust=0.3))
reorder(day, -perc)
options(repr.plot.width=22, repr.plot.height=8)
# Draw plot
ggplot(df_i[1:20,], aes(x=reorder(users, -loises),  y=loises)) +
geom_bar(stat="identity", width=.8, fill="tomato3") +
labs(title="Ordered Bar Chart",
#subtitle="Make Vs Avg. Mileage",
#caption="source: mpg",
x = ' ',
y = ' '
) +
theme(axis.text.x = element_text(angle=90, vjust=0.3))
reorder(day, -perc)
# Определяем интересующую нас позицию
i = which(uid_names[1,] == user)
li = L[i,] # лайкаю я
df_i <- data.frame(t(rbind(uid_names[2,], li)))
names(df_i) <- c('users','loises')
df_i$loises <- as.numeric(df_i$loises)
df_i <- df_i[order(df_i$loises,decreasing = TRUE),]
options(repr.plot.width=22, repr.plot.height=8)
# Draw plot
ggplot(df_i[1:30,], aes(x=reorder(users, -loises),  y=loises)) +
geom_bar(stat="identity", width=.8, fill="tomato3") +
labs(title="Ordered Bar Chart",
#subtitle="Make Vs Avg. Mileage",
#caption="source: mpg",
x = ' ',
y = ' '
) +
theme(axis.text.x = element_text(angle=90, vjust=0.3))
like_me <- function(name,uid_names,L){
# id по имени
if(length(strsplit(name, ' ')[[1]]) == 2){
user = uid_names[1,][uid_names[2,] == name]
}else{
# id по id
user = name
}
# Определяем интересующую нас позицию
i = which(uid_names[1,] == user)
li = L[i,] # лайкаю я
df_i <- data.frame(t(rbind(uid_names[2,], li)))
names(df_i) <- c('users','loises')
df_i$loises <- as.numeric(df_i$loises)
df_i <- df_i[order(df_i$loises,decreasing = TRUE),]
lj = L[,i] # лайкают меня
df_j <- data.frame(t(rbind(uid_names[2,], lj)))
names(df_j) <- c('users','loises')
df_j$loises <- as.numeric(df_j$loises)
df_j <- df_i[order(df_j$loises,decreasing = TRUE),]
return(df_i, df_j)
}
df_i, df_j = like_me('Гусевская Алина', uid_names, L)
df_i df_j = like_me('Гусевская Алина', uid_names, L)
lst = like_me('Гусевская Алина', uid_names, L)
like_me <- function(name,uid_names,L){
# id по имени
if(length(strsplit(name, ' ')[[1]]) == 2){
user = uid_names[1,][uid_names[2,] == name]
}else{
# id по id
user = name
}
# Определяем интересующую нас позицию
i = which(uid_names[1,] == user)
li = L[i,] # лайкаю я
df_i <- data.frame(t(rbind(uid_names[2,], li)))
names(df_i) <- c('users','loises')
df_i$loises <- as.numeric(df_i$loises)
df_i <- df_i[order(df_i$loises,decreasing = TRUE),]
lj = L[,i] # лайкают меня
df_j <- data.frame(t(rbind(uid_names[2,], lj)))
names(df_j) <- c('users','loises')
df_j$loises <- as.numeric(df_j$loises)
df_j <- df_i[order(df_j$loises,decreasing = TRUE),]
return( list(df_i, df_j))
}
lst = like_me('Гусевская Алина', uid_names, L)
lst[[1]]
df_i = lst[[1]]
# Draw plot
ggplot(df_i[1:30,], aes(x=reorder(users, -loises),  y=loises)) +
geom_bar(stat="identity", width=.8, fill="tomato3") +
labs(title="Ordered Bar Chart",
#subtitle="Make Vs Avg. Mileage",
#caption="source: mpg",
x = ' ',
y = ' '
) +
theme(axis.text.x = element_text(angle=90, vjust=0.3))
like_me <- function(name,uid_names,L){
# id по имени
if(length(strsplit(name, ' ')[[1]]) == 2){
user = uid_names[1,][uid_names[2,] == name]
}else{
# id по id
user = name
}
# Определяем интересующую нас позицию
i = which(uid_names[1,] == user)
li = L[i,] # лайкаю я
df_i <- data.frame(t(rbind(uid_names[2,], li)))
names(df_i) <- c('users','loises')
df_i$loises <- as.numeric(df_i$loises)
df_i <- df_i[order(df_i$loises,decreasing = TRUE),]
lj = L[,i] # лайкают меня
df_j <- data.frame(t(rbind(uid_names[2,], lj)))
names(df_j) <- c('users','loises')
df_j$loises <- as.numeric(df_j$loises)
df_j <- df_i[order(df_j$loises,decreasing = TRUE),]
return( list(df_i, df_j))
}
likes_plot <- function(df_i){
ggplot(df_i[1:30,], aes(x=reorder(users, -loises),  y=loises)) +
geom_bar(stat="identity", width=.8, fill="tomato3") +
labs(title="Ordered Bar Chart",
#subtitle="Make Vs Avg. Mileage",
#caption="source: mpg",
x = ' ',
y = ' '
) +
theme(axis.text.x = element_text(angle=90, vjust=0.3))
}
lst = like_me('Гусевская Алина', uid_names, L)
likes_plot(lst[[1]])
likes_plot(lst[[2]])
lst[[2]]
head(lst[[2]])
like_me <- function(name,uid_names,L){
# id по имени
if(length(strsplit(name, ' ')[[1]]) == 2){
user = uid_names[1,][uid_names[2,] == name]
}else{
# id по id
user = name
}
# Определяем интересующую нас позицию
i = which(uid_names[1,] == user)
li = L[i,] # лайкаю я
df_i <- data.frame(t(rbind(uid_names[2,], li)))
names(df_i) <- c('users','loises')
df_i$loises <- as.numeric(df_i$loises)
df_i <- df_i[order(df_i$loises,decreasing = TRUE),]
lj = L[,i] # лайкают меня
df_j <- data.frame(t(rbind(uid_names[2,], lj)))
names(df_j) <- c('users','loises')
df_j$loises <- as.numeric(df_j$loises)
df_j <- df_j[order(df_j$loises,decreasing = TRUE),]
return( list(df_i, df_j))
}
likes_plot <- function(df_i){
ggplot(df_i[1:30,], aes(x=reorder(users, -loises),  y=loises)) +
geom_bar(stat="identity", width=.8, fill="tomato3") +
labs(title="Ordered Bar Chart",
#subtitle="Make Vs Avg. Mileage",
#caption="source: mpg",
x = ' ',
y = ' '
) +
theme(axis.text.x = element_text(angle=90, vjust=0.3))
}
lst = like_me('Гусевская Алина', uid_names, L)
likes_plot(lst[[1]])
likes_plot(lst[[2]])
# Подгружаем вспомогательные функции
source("helper.R")
lst = like_me('Гусевская Алина', uid_names, L)
likes_plot(lst[[1]])
likes_plot(lst[[2]])
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
clear(0)
clear(0)
clear()
library('shiny')
library('ggplot2')
# Соответствие id именам
uid_names <- read.delim("uid_names.csv", header=FALSE, stringsAsFactors=FALSE)
library('RcppCNPy')
L <- npyLoad("L.npy")
L_abs <- npyLoad("L_abs.npy")
L_wall <- npyLoad("L_wall.npy")
L_wall_abs <- npyLoad("L_wall_abs.npy")
L_photo <- npyLoad("L_photo.npy")
L_photo_abs <- npyLoad("L_photo_abs.npy")
# Подгружаем вспомогательные функции
source("helper.R")
# Define server logic required to draw a histogram ----
server <- function(input, output) {
# Histogram of the Old Faithful Geyser Data ----
# with requested number of bins
# This expression that generates a histogram is wrapped in a call
# to renderPlot to indicate that:
#
# 1. It is "reactive" and therefore should be automatically
#    re-executed when inputs (input$bins) change
# 2. Its output type is a plot
output$distPlot <- renderPlot({
if(input$var_L == 'Все лайки'){
L_cur <- L
} else if(input$var_L == 'Все лайкопосты'){
L_cur <- L_abs
} else if(input$var_L == 'Стена лайки'){
L_cur <- L_wall
} else if(input$var_L == 'Стена лайкопосты'){
L_cur <- L_wall_abs
} else if(input$var_L == 'Фотки лайки'){
L_cur <- L_photo
} else if(input$var_L == 'Фотки лайкопосты'){
L_cur <- L_photo_abs
}
lst = like_me('Гусевская Алина', uid_names, L_cur)
likes_plot(lst[[1]], 'Гусевская Алина ставит лайки')
likes_plot(lst[[2]], 'Гусевская Алина получает лайки')
#x    <- faithful$waiting
#bins <- seq(min(x), max(x), length.out = input$bins + 1)
#hist(x, breaks = bins, col = "#75AADB", border = "white",
#     xlab = "Waiting time to next eruption (in mins)",
#     main = "Histogram of waiting times")
})
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?paste0
paste0('оцуоуац','hoewfhoe',' ')
paste0('оцуоуац','hoewfhoe',sep =' ')
paste('оцуоуац','hoewfhoe',sep =' ')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runExample("04_mpg")
runExample("06_tabsets")
runApp()
runApp()
runApp()
runApp()
runApp()
runExample("07_widgets")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('repr')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
uid_names[1,][uid_names[2,] == 'Ульянкин Филипп']
i = which(uid_names[1,] == "6045249")
ш
i
uid_names[559]
like_me('Ульянкин Филипп', uid_names, L)
lst = like_me('Ульянкин Филипп', uid_names, L)
likes_plot <- function(df_i, title){
ggplot(df_i[1:30,], aes(x=reorder(users, -loises),  y=loises)) +
geom_bar(stat="identity", width=.8, fill="#377EB8") +
labs(title= title,
x = ' ',
y = ' '
) +
theme(axis.text.x = element_text(angle=90, vjust=0.3,size=12),
plot.title = element_text(hjust = 0.5, size = 20))
}
like_plot(lst[[1]],'hgg')
likes_plot(lst[[1]],'hgg')
lst[[1]]
i
li = L[i,] # лайкаю я
li
df_i <- data.frame(t(rbind(uid_names[2,], li)))
df_i
names(df_i) <- c('users','loises')
df_i
df_i$loises
as.numeric(df_i$loises)
as.vector(df_i$loises)
as.matrix(df_i$loises)
as.numeric(as.vector(df_i$loises))
runApp()
runApp()
runApp()
L[,20]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
